# Generated by Django 3.1.5 on 2021-02-15 19:04

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('DB', '0002_accountemailaddress_accountemailconfirmation_djangosite_questform_socialaccountsocialaccount_sociala'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('answer_id', models.AutoField(db_column='ANSWER_ID', primary_key=True, serialize=False)),
                ('answer_cont', models.CharField(db_column='ANSWER_CONT', max_length=5000)),
                ('answer_created', models.DateTimeField(db_column='ANSWER_CREATED')),
            ],
            options={
                'db_table': 'ANSWER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('bank_no', models.AutoField(db_column='BANK_NO', primary_key=True, serialize=False)),
                ('bank_plus', models.IntegerField(blank=True, db_column='BANK_PLUS', null=True)),
                ('bank_minus', models.IntegerField(blank=True, db_column='BANK_MINUS', null=True)),
                ('bank_title', models.CharField(blank=True, db_column='BANK_TITLE', max_length=100, null=True)),
                ('bank_used', models.DateTimeField(blank=True, db_column='BANK_USED', null=True)),
                ('bank_created', models.DateTimeField(db_column='BANK_CREATED')),
                ('bank_updated', models.DateTimeField(blank=True, db_column='BANK_UPDATED', null=True)),
                ('bank_apply', models.IntegerField(db_column='BANK_APPLY')),
                ('bank_reason', models.CharField(blank=True, db_column='BANK_REASON', max_length=300, null=True)),
                ('bank_reject_reason', models.CharField(blank=True, db_column='BANK_REJECT_REASON', max_length=200, null=True)),
            ],
            options={
                'db_table': 'BANK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BankFile',
            fields=[
                ('bank_file_id', models.AutoField(db_column='BANK_FILE_ID', primary_key=True, serialize=False)),
                ('bank_file_path', models.CharField(db_column='BANK_FILE_PATH', max_length=1000)),
            ],
            options={
                'db_table': 'BANK_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('board_no', models.AutoField(db_column='BOARD_NO', primary_key=True, serialize=False)),
                ('board_title', models.CharField(db_column='BOARD_TITLE', max_length=100)),
                ('board_cont', models.CharField(db_column='BOARD_CONT', max_length=5000)),
                ('board_created', models.DateTimeField(db_column='BOARD_CREATED')),
            ],
            options={
                'db_table': 'BOARD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoardFile',
            fields=[
                ('board_file_id', models.AutoField(db_column='BOARD_FILE_ID', primary_key=True, serialize=False)),
                ('board_file_path', models.CharField(db_column='BOARD_FILE_PATH', max_length=1000)),
            ],
            options={
                'db_table': 'BOARD_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoardType',
            fields=[
                ('board_type_no', models.AutoField(db_column='BOARD_TYPE_NO', primary_key=True, serialize=False)),
                ('board_type_name', models.CharField(db_column='BOARD_TYPE_NAME', max_length=50)),
            ],
            options={
                'db_table': 'BOARD_TYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(db_column='COMMENT_ID', primary_key=True, serialize=False)),
                ('comment_cont', models.CharField(db_column='COMMENT_CONT', max_length=5000)),
                ('comment_created', models.DateTimeField(db_column='COMMENT_CREATED')),
            ],
            options={
                'db_table': 'COMMENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContestBoard',
            fields=[
                ('contest_no', models.AutoField(db_column='CONTEST_NO', primary_key=True, serialize=False)),
                ('contest_name', models.CharField(db_column='CONTEST_NAME', max_length=500)),
                ('contest_title', models.CharField(db_column='CONTEST_TITLE', max_length=100)),
                ('contest_cont', models.TextField(db_column='CONTEST_CONT')),
                ('contest_asso', models.CharField(db_column='CONTEST_ASSO', max_length=100)),
                ('contest_deadline', models.DateTimeField(db_column='CONTEST_DEADLINE')),
                ('contest_created', models.DateTimeField(db_column='CONTEST_CREATED')),
            ],
            options={
                'db_table': 'CONTEST_BOARD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContestFile',
            fields=[
                ('contest_file_id', models.AutoField(db_column='CONTEST_FILE_ID', primary_key=True, serialize=False)),
                ('contest_file_path', models.CharField(db_column='CONTEST_FILE_PATH', max_length=1000)),
            ],
            options={
                'db_table': 'CONTEST_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lect',
            fields=[
                ('lect_no', models.AutoField(db_column='LECT_NO', primary_key=True, serialize=False)),
                ('lect_title', models.CharField(db_column='LECT_TITLE', max_length=100)),
                ('lect_pic', models.CharField(db_column='LECT_PIC', max_length=1000)),
                ('lect_created', models.DateTimeField(db_column='LECT_CREATED')),
                ('lect_intro', models.CharField(db_column='LECT_INTRO', max_length=300)),
                ('lect_curri', models.TextField(db_column='LECT_CURRI')),
                ('lect_limit_num', models.IntegerField(db_column='LECT_LIMIT_NUM')),
                ('lect_place_or_link', models.CharField(db_column='LECT_PLACE_OR_LINK', max_length=1000)),
                ('lect_deadline', models.DateTimeField(db_column='LECT_DEADLINE')),
            ],
            options={
                'db_table': 'LECT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectBoard',
            fields=[
                ('lect_board_no', models.AutoField(db_column='LECT_BOARD_NO', primary_key=True, serialize=False)),
                ('lect_board_title', models.CharField(db_column='LECT_BOARD_TITLE', max_length=100)),
                ('lect_board_created', models.DateTimeField(db_column='LECT_BOARD_CREATED')),
                ('lect_board_cont', models.TextField(db_column='LECT_BOARD_CONT')),
                ('lect_board_deadline', models.DateTimeField(db_column='LECT_BOARD_DEADLINE')),
            ],
            options={
                'db_table': 'LECT_BOARD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectBoardAnswer',
            fields=[
                ('lect_ans_no', models.AutoField(db_column='LECT_ANS_NO', primary_key=True, serialize=False)),
                ('lect_ans_cont', models.CharField(blank=True, db_column='LECT_ANS_CONT', max_length=5000, null=True)),
                ('lect_ans_created', models.DateTimeField(db_column='LECT_ANS_CREATED')),
            ],
            options={
                'db_table': 'LECT_BOARD_ANSWER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectBoardAnswerFile',
            fields=[
                ('lect_ans_file_id', models.AutoField(db_column='LECT_ANS_FILE_ID', primary_key=True, serialize=False)),
                ('lect_ans_file_path', models.CharField(db_column='LECT_ANS_FILE_PATH', max_length=1000)),
            ],
            options={
                'db_table': 'LECT_BOARD_ANSWER_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectBoardComment',
            fields=[
                ('lect_board_comment_id', models.AutoField(db_column='LECT_BOARD_COMMENT_ID', primary_key=True, serialize=False)),
                ('lect_board_comment_cont', models.TextField(db_column='LECT_BOARD_COMMENT_CONT')),
                ('lect_board_comment_date', models.DateTimeField(db_column='LECT_BOARD_COMMENT_DATE')),
            ],
            options={
                'db_table': 'LECT_BOARD_COMMENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectBoardEx',
            fields=[
                ('lect_board_ex_no', models.AutoField(db_column='LECT_BOARD_EX_NO', primary_key=True, serialize=False)),
                ('lect_board_ex_content', models.TextField(blank=True, db_column='LECT_BOARD_EX_CONTENT', null=True)),
            ],
            options={
                'db_table': 'LECT_BOARD_EX',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectBoardExFile',
            fields=[
                ('lect_board_ex_file_id', models.AutoField(db_column='LECT_BOARD_EX_FILE_ID', primary_key=True, serialize=False)),
                ('lect_board_ex_file_path', models.CharField(db_column='LECT_BOARD_EX_FILE_PATH', max_length=1000)),
            ],
            options={
                'db_table': 'LECT_BOARD_EX_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectBoardFile',
            fields=[
                ('lect_board_file_id', models.AutoField(db_column='LECT_BOARD_FILE_ID', primary_key=True, serialize=False)),
                ('lect_board_file_path', models.CharField(db_column='LECT_BOARD_FILE_PATH', max_length=1000)),
            ],
            options={
                'db_table': 'LECT_BOARD_FILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectCheck',
            fields=[
                ('check_id', models.AutoField(db_column='CHECK_ID', primary_key=True, serialize=False)),
                ('check_date', models.DateTimeField(db_column='CHECK_DATE')),
            ],
            options={
                'db_table': 'LECT_CHECK',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectType',
            fields=[
                ('type_no', models.AutoField(db_column='TYPE_NO', primary_key=True, serialize=False)),
                ('type_name', models.IntegerField(db_column='TYPE_NAME')),
            ],
            options={
                'db_table': 'LECT_TYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectUser',
            fields=[
                ('lect_user_stu', models.AutoField(db_column='LECT_USER_STU', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'LECT_USER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MethodInfo',
            fields=[
                ('method_no', models.AutoField(db_column='METHOD_NO', primary_key=True, serialize=False)),
                ('method_name', models.CharField(db_column='METHOD_NAME', max_length=100)),
            ],
            options={
                'db_table': 'METHOD_INFO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateInfo',
            fields=[
                ('state_no', models.AutoField(db_column='STATE_NO', primary_key=True, serialize=False)),
                ('state_name', models.CharField(db_column='STATE_NAME', max_length=50)),
            ],
            options={
                'db_table': 'STATE_INFO',
                'managed': False,
            },
        ),
    ]
